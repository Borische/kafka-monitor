<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pegasus.kafka.mapper.TopicRecordMapper">
    <insert id="batchSave">
        INSERT INTO `${@com.pegasus.kafka.common.constant.Constants@DATABASE_NAME}`.`${tableName}`
        (
        `topic_name`,
        `partition_id`,
        `offset`,
        `key`,
        `value`,
        `timestamp`
        )
        VALUES
        <foreach collection="topicRecords" item="item" separator=",">
            (
            #{item.topicName},
            #{item.partitionId},
            #{item.offset},
            #{item.key},
            #{item.value},
            #{item.timestamp}
            )
        </foreach>
    </insert>

    <update id="createTableIfNotExists">
        <foreach collection="tableNames" item="tableName">
            SET NAMES utf8mb4;
            SET FOREIGN_KEY_CHECKS = 0;
            CREATE TABLE IF NOT EXISTS `${@com.pegasus.kafka.common.constant.Constants@DATABASE_NAME}`.`${tableName}` (
            `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
            `topic_name` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT
            '主题名称',
            `partition_id` int(11) UNSIGNED NOT NULL COMMENT '分区id号',
            `offset` bigint(20) UNSIGNED NOT NULL COMMENT '消息偏移量',
            `key` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '消息键值',
            `value` varchar(10000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '消息体',
            `timestamp` datetime(0) NOT NULL COMMENT '消息时间',
            `create_time` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '记录创建时间',
            PRIMARY KEY (`id`) USING BTREE,
            UNIQUE INDEX `idx_topic_partition_id_offset`(`partition_id`, `offset`) USING BTREE,
            INDEX `idx_topic_key`(`key`) USING BTREE,
            INDEX `idx_topic_timestamp`(`timestamp`) USING BTREE
            ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;
            SET FOREIGN_KEY_CHECKS = 1;
        </foreach>
    </update>

    <update id="createDatabaseIfNotExists">
        CREATE DATABASE IF NOT EXISTS `${@com.pegasus.kafka.common.constant.Constants@DATABASE_NAME}` CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci';
    </update>

    <select id="listMessages" resultType="com.pegasus.kafka.entity.dto.TopicRecord">
        SELECT
        *
        FROM `${@com.pegasus.kafka.common.constant.Constants@DATABASE_NAME}`.`${tableName}`
        WHERE 1 = 1
        <if test="partitionId >= 0">
            AND partition_id = #{partitionId}
        </if>
        <if test="key != null and key != ''">
            AND `key` = #{key}
        </if>
        <if test="from != null and to !=null">
            AND `timestamp` &gt;= #{from}
            AND `timestamp` &lt;= #{to}
        </if>
        ORDER BY timestamp DESC
    </select>

    <select id="findMessage" resultType="com.pegasus.kafka.entity.dto.TopicRecord">
        SELECT
        *
        FROM `${@com.pegasus.kafka.common.constant.Constants@DATABASE_NAME}`.`${tableName}`
        WHERE `partition_id` = #{partitionId}
        AND   `offset` = #{offset}
        AND   `key` = #{key}
    </select>
</mapper>